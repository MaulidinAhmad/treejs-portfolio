@use "./reset.scss";
@use "./variable.scss" as vars;
@use "sass:map";
@use "./utils.scss" as utils;
@use "./breakpoints.scss" as *;

.canvas-container {
  position: fixed;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  overflow: hidden;
}

#my-canvas {
  height: 100%;
  width: 100%;
  z-index: 1;
  background-color: #000;
}

$themes: (
  light: (
    base-dark-grey: rgb(97, 105, 123),
    base-grey: #a4b2d1ff,
    base-grey-200: rgb(130, 142, 168),
    base-pink: #eedfe4,
    base-light-purple: #ead7ef,
    header-text: #6c3f7c,
    text: #fefefe,
    svgs: #fefefe,
  ),
  dark: (
    base-dark-grey: rgb(118, 128, 149),
    base-grey: rgb(189, 206, 244),
    base-grey-200: rgb(130, 142, 168),
    base-pink: #8b4e62,
    base-light-purple: #401d49,
    header-text: #fefefe,
    text: rgb(52, 56, 66),
    svgs: rgb(97, 105, 123),
  ),
);

// Theme mixins
$theme-map: null;
@mixin themed() {
  @each $theme, $map in $themes {
    .#{$theme}-theme & {
      $theme-map: () !global;
      @each $key, $value in $map {
        $theme-map: map.merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      //   $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map.get($theme-map, $key);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  overflow: hidden;
}

// h1,
// h2 {
//   font-family: "Motley Forces";
// }

// p,
// ul,
// li {
//   font-family: "Shifty Notes";
// }

:root {
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  font-family: "Outfit", sans-serif;
  font-display: swap;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.loading-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #b5cbd6;
}

.loading-container p {
  font-size: 2rem;
  color: #fff;
  font-weight: 800;
}

.custom-modal {
  &__modal-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    visibility: hidden;
    transition: visibility 0.3s linear 0s;
  }

  &__modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(utils.pxToRem(10));
    opacity: 0;
    transition: opacity 300ms ease-in-out;
  }

  &__modal-container--show {
    visibility: visible;
    .custom-modal__modal-content {
      transform: translateY(0) scale(1);
    }
    .custom-modal__modal-overlay {
      opacity: 1;
    }
  }

  &__modal-head {
    margin-bottom: utils.pxToRem(16);
  }

  &__modal-content {
    transform: translateY(100vh) scale(0.7);
    transition: transform ease-in-out 300ms;
    text-align: center;
    position: relative;
    background-color: #ffffff;
    color: #000;
    z-index: 2;
    padding: 2em 1em;
    border-radius: utils.pxToRem(8);
    width: utils.pxToRem(800);
    box-shadow: 0 utils.pxToRem(4) utils.pxToRem(6) rgba(0, 0, 0, 0.1);
    font-size: 18px;
    // overflow: hidden;

    @include breakpoints-max("medium") {
      margin: utils.pxToRem(50);
    }
    @include breakpoints-max("small") {
      margin: utils.pxToRem(16);
    }

    @include themed() {
      background-color: t("base-grey");
      border: utils.pxToRem(8) solid t("base-dark-grey");
      color: t("text");
    }
    &__close {
      all: unset;
      left: utils.pxToRem(-35);
      top: utils.pxToRem(-35);
      position: absolute;
      padding: utils.pxToRem(10);
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      transition: transform ease-in-out 400ms;
      border-radius: utils.pxToRem(5);

      @include breakpoints-max("small") {
        left: utils.pxToRem(-15);
        top: utils.pxToRem(-35);
      }

      &:hover {
        transform: rotate(5deg) scale(1.3);
      }
      @include themed() {
        background-color: t("base-grey");
        border: utils.pxToRem(4) solid t("base-dark-grey");
      }

      #close {
        width: (utils.pxToRem(32));
        path {
          @include themed() {
            fill: t("svgs");
          }
        }
      }
    }
    &__title {
      padding: utils.pxToRem(10) utils.pxToRem(100);
      border-radius: utils.pxToRem(5);
      display: inline-block;
      font-size: utils.pxToRem(24);
      font-weight: 500;
      margin-bottom: utils.pxToRem(16);
      @include themed() {
        background-color: t("base-grey-200");
        border: utils.pxToRem(4) solid t("base-dark-grey");
        color: t("text");
      }
    }
    .about-me {
      padding: 0 utils.pxToRem(20);
      @include breakpoints-max("small") {
        padding: 0 utils.pxToRem(5);
      }
    }
    &__content {
      text-align: left;
      overflow-y: auto;
      max-height: 50vh;
      // min-height: utils.pxToRem(400);
      -webkit-overflow-scrolling: touch;
      overscroll-behavior: contain;
      touch-action: pan-y;

      @include breakpoints-max("medium") {
        max-height: 50vh;
      }

      @include breakpoints-max("small") {
        max-height: 55vh;
      }

      &::-webkit-scrollbar {
        width: utils.pxToRem(8);
      }

      &::-webkit-scrollbar-track {
        width: utils.pxToRem(2);
        border-radius: utils.pxToRem(4);
        background-color: rgba(111, 73, 116, 0.2);
      }

      &::-webkit-scrollbar-thumb {
        background-color: vars.$base-grey-200;
        border-radius: utils.pxToRem(4);
      }
    }
    .socials {
      display: flex;
      gap: utils.pxToRem(16);
      justify-content: center;
      margin-bottom: utils.pxToRem(32);
      font-size: utils.pxToRem(32);

      @include breakpoints-max("small") {
        margin-bottom: utils.pxToRem(20);
      }

      svg {
        color: #000;
        // width: 40px;
      }
    }
    .works {
      list-style: none;
      padding: 0;
      display: flex;
      flex-direction: column;
      gap: utils.pxToRem(32);
      padding-right: 40px;
      @include breakpoints-max("small") {
        padding-right: 0;
      }
      &__item {
        display: flex;
        gap: 20px;
        align-items: center;
        @include breakpoints-max("small") {
          flex-direction: column;
        }
        &__left {
          &__image {
            width: 200px;
            height: 150px;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            border-radius: 5px;
            @include themed() {
              background-color: t("base-grey-200");
              border: utils.pxToRem(3) solid t("base-dark-grey");
            }
            @include breakpoints-max("small") {
              width: 100%;
            }
            img {
              width: 100%;
              height: auto;
              object-fit: cover;
            }
          }
        }
        &__right {
          h2 {
            margin-bottom: utils.pxToRem(18);
            @include themed() {
              color: t("base-dark-grey");
            }
          }
          p {
            font-size: utils.pxToRem(16);
            line-height: 1.3em;
          }
        }
      }
    }
  }
}

.loading-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: white;
}

.custom-button {
  all: unset;
  @include themed() {
    background-color: t("base-grey");
    border: utils.pxToRem(4) solid t("base-dark-grey");
  }
  transition: background-color ease-in-out 1000ms, border ease-in-out 1000ms,
    transform ease-in-out 500ms, color ease-in-out 1000ms;
  border-radius: utils.pxToRem(5);
  color: black;
  padding: utils.pxToRem(10) 20px;
  cursor: pointer;
  min-width: 60px;
}

.action-buttons {
  position: fixed;
  right: 20px;
  top: 20px;
  display: flex;
  gap: 20px;
}

.toggle-theme {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  &:hover {
    transform: rotate(5deg) scale(1.3);
  }
  svg {
    position: absolute;
    width: utils.pxToRem(32);
    transition: transform ease-in-out 1000ms;
  }
  #moon {
    path {
      @include themed() {
        fill: t("svgs");
      }
    }
    transform: translateY(utils.pxToRem(-100));
  }
  #sun {
    path {
      @include themed() {
        fill: t("svgs");
      }
    }
  }
  path {
    transition: fill ease-in-out 1000ms;
  }
  &--night {
    #moon {
      transform: translateY(0);
    }
    #sun {
      transform: translateY(utils.pxToRem(100));
    }
  }
}

.cv-button {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  font-weight: 700;
  font-size: 18px;
  &:hover {
    transform: rotate(-5deg) scale(1.3);
  }
  @include themed() {
    color: t("svgs");
  }
}

@keyframes modal-animation {
  0% {
    transform: scale(0.7) translateY(-100%);
  }
  100% {
    transform: scale(1) translateY(100%);
  }
}
